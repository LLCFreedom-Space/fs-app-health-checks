{"interfaceLanguages":{"swift":[{"children":[{"title":"Protocols","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/healthchecks\/applicationchecksprotocol\/uptime()","title":"func uptime() -> HealthCheckItem","type":"method"}],"path":"\/documentation\/healthchecks\/applicationchecksprotocol","title":"ApplicationChecksProtocol","type":"protocol"},{"path":"\/documentation\/healthchecks\/applicationhealthchecksprotocol","title":"ApplicationHealthChecksProtocol","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/healthchecks\/checksprotocol\/check(for:)","title":"func check(for: [MeasurementType]) async -> [String : HealthCheckItem]","type":"method"}],"path":"\/documentation\/healthchecks\/checksprotocol","title":"ChecksProtocol","type":"protocol"},{"path":"\/documentation\/healthchecks\/consulhealthchecksprotocol","title":"ConsulHealthChecksProtocol","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/healthchecks\/mongochecksprotocol\/connection()","title":"func connection() async -> HealthCheckItem","type":"method"},{"path":"\/documentation\/healthchecks\/mongochecksprotocol\/getconnection()","title":"func getConnection() async -> String","type":"method"},{"path":"\/documentation\/healthchecks\/mongochecksprotocol\/responsetime()","title":"func responseTime() async -> HealthCheckItem","type":"method"}],"path":"\/documentation\/healthchecks\/mongochecksprotocol","title":"MongoChecksProtocol","type":"protocol"},{"path":"\/documentation\/healthchecks\/mongohealthchecksprotocol","title":"MongoHealthChecksProtocol","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/healthchecks\/mongorequestsendable\/getconnection(by:)","title":"func getConnection(by: String) async throws -> String","type":"method"}],"path":"\/documentation\/healthchecks\/mongorequestsendable","title":"MongoRequestSendable","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/healthchecks\/postgreschecksprotocol\/connection()","title":"func connection() async -> HealthCheckItem","type":"method"},{"path":"\/documentation\/healthchecks\/postgreschecksprotocol\/getversion()","title":"func getVersion() async -> String","type":"method"},{"path":"\/documentation\/healthchecks\/postgreschecksprotocol\/responsetime()","title":"func responseTime() async -> HealthCheckItem","type":"method"}],"path":"\/documentation\/healthchecks\/postgreschecksprotocol","title":"PostgresChecksProtocol","type":"protocol"},{"path":"\/documentation\/healthchecks\/postgreshealthchecksprotocol","title":"PostgresHealthChecksProtocol","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/healthchecks\/psqlrequestsendable\/getversiondescription()","title":"func getVersionDescription() async throws -> String","type":"method"}],"path":"\/documentation\/healthchecks\/psqlrequestsendable","title":"PsqlRequestSendable","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/healthchecks\/redischecksprotocol\/connection()","title":"func connection() async -> HealthCheckItem","type":"method"},{"path":"\/documentation\/healthchecks\/redischecksprotocol\/ping()","title":"func ping() async -> String","type":"method"},{"path":"\/documentation\/healthchecks\/redischecksprotocol\/responsetime()","title":"func responseTime() async -> HealthCheckItem","type":"method"}],"path":"\/documentation\/healthchecks\/redischecksprotocol","title":"RedisChecksProtocol","type":"protocol"},{"path":"\/documentation\/healthchecks\/redishealthchecksprotocol","title":"RedisHealthChecksProtocol","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/healthchecks\/redisrequestsendable\/getpong()","title":"func getPong() async throws -> String","type":"method"}],"path":"\/documentation\/healthchecks\/redisrequestsendable","title":"RedisRequestSendable","type":"protocol"},{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/healthchecks\/applicationhealthchecks\/app","title":"let app: Application","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/healthchecks\/applicationhealthchecks\/check(for:)","title":"func check(for: [MeasurementType]) async -> [String : HealthCheckItem]","type":"method"},{"path":"\/documentation\/healthchecks\/applicationhealthchecks\/uptime()","title":"func uptime() -> HealthCheckItem","type":"method"}],"path":"\/documentation\/healthchecks\/applicationhealthchecks","title":"ApplicationHealthChecks","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/healthchecks\/consulconfig\/init(id:url:username:password:)","title":"init(id: String, url: String, username: String?, password: String?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/healthchecks\/consulconfig\/id","title":"let id: String","type":"property"},{"path":"\/documentation\/healthchecks\/consulconfig\/password","title":"let password: String?","type":"property"},{"path":"\/documentation\/healthchecks\/consulconfig\/url","title":"let url: String","type":"property"},{"path":"\/documentation\/healthchecks\/consulconfig\/username","title":"let username: String?","type":"property"}],"path":"\/documentation\/healthchecks\/consulconfig","title":"ConsulConfig","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/healthchecks\/consulhealthchecks\/app","title":"let app: Application","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/healthchecks\/consulhealthchecks\/check(for:)","title":"func check(for: [MeasurementType]) async -> [String : HealthCheckItem]","type":"method"}],"path":"\/documentation\/healthchecks\/consulhealthchecks","title":"ConsulHealthChecks","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/healthchecks\/healthcheck\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/healthchecks\/healthcheck\/checks","title":"var checks: [String : [HealthCheckItem]]?","type":"property"},{"path":"\/documentation\/healthchecks\/healthcheck\/description","title":"var description: String?","type":"property"},{"path":"\/documentation\/healthchecks\/healthcheck\/links","title":"var links: [String : String]?","type":"property"},{"path":"\/documentation\/healthchecks\/healthcheck\/notes","title":"var notes: [String]?","type":"property"},{"path":"\/documentation\/healthchecks\/healthcheck\/output","title":"var output: String?","type":"property"},{"path":"\/documentation\/healthchecks\/healthcheck\/releaseid","title":"var releaseId: String?","type":"property"},{"path":"\/documentation\/healthchecks\/healthcheck\/serviceid","title":"var serviceId: UUID?","type":"property"},{"path":"\/documentation\/healthchecks\/healthcheck\/status","title":"var status: HealthCheckStatus?","type":"property"},{"path":"\/documentation\/healthchecks\/healthcheck\/version","title":"var version: String?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/healthchecks\/healthcheck\/afterdecode()","title":"func afterDecode() throws","type":"method"},{"path":"\/documentation\/healthchecks\/healthcheck\/beforeencode()","title":"func beforeEncode() throws","type":"method"},{"path":"\/documentation\/healthchecks\/healthcheck\/encoderesponse(for:)","title":"func encodeResponse(for: Request) -> EventLoopFuture<Response>","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/healthchecks\/healthcheck\/defaultcontenttype","title":"static var defaultContentType: HTTPMediaType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/healthchecks\/healthcheck\/decoderequest(_:)-3j1gv","title":"static func decodeRequest(Request) async throws -> Self","type":"method"},{"path":"\/documentation\/healthchecks\/healthcheck\/decoderequest(_:)-73h0q","title":"static func decodeRequest(Request) -> EventLoopFuture<Self>","type":"method"}],"path":"\/documentation\/healthchecks\/healthcheck\/content-implementations","title":"Content Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/healthchecks\/healthcheck\/encoderesponse(status:headers:for:)","title":"func encodeResponse(status: HTTPStatus, headers: HTTPHeaders, for: Request) -> EventLoopFuture<Response>","type":"method"}],"path":"\/documentation\/healthchecks\/healthcheck\/responseencodable-implementations","title":"ResponseEncodable Implementations","type":"symbol"}],"path":"\/documentation\/healthchecks\/healthcheck","title":"HealthCheck","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/healthchecks\/healthcheckitem\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/healthchecks\/healthcheckitem\/affectedendpoints","title":"var affectedEndpoints: [String]?","type":"property"},{"path":"\/documentation\/healthchecks\/healthcheckitem\/componentid","title":"var componentId: String?","type":"property"},{"path":"\/documentation\/healthchecks\/healthcheckitem\/componenttype","title":"var componentType: ComponentType?","type":"property"},{"path":"\/documentation\/healthchecks\/healthcheckitem\/links","title":"var links: [String : String]?","type":"property"},{"path":"\/documentation\/healthchecks\/healthcheckitem\/node","title":"var node: Int?","type":"property"},{"path":"\/documentation\/healthchecks\/healthcheckitem\/observedunit","title":"var observedUnit: String?","type":"property"},{"path":"\/documentation\/healthchecks\/healthcheckitem\/observedvalue","title":"var observedValue: Double?","type":"property"},{"path":"\/documentation\/healthchecks\/healthcheckitem\/output","title":"var output: String?","type":"property"},{"path":"\/documentation\/healthchecks\/healthcheckitem\/status","title":"var status: HealthCheckStatus?","type":"property"},{"path":"\/documentation\/healthchecks\/healthcheckitem\/time","title":"var time: String?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/healthchecks\/healthcheckitem\/afterdecode()","title":"func afterDecode() throws","type":"method"},{"path":"\/documentation\/healthchecks\/healthcheckitem\/beforeencode()","title":"func beforeEncode() throws","type":"method"},{"path":"\/documentation\/healthchecks\/healthcheckitem\/encoderesponse(for:)","title":"func encodeResponse(for: Request) -> EventLoopFuture<Response>","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/healthchecks\/healthcheckitem\/defaultcontenttype","title":"static var defaultContentType: HTTPMediaType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/healthchecks\/healthcheckitem\/decoderequest(_:)-6tnf4","title":"static func decodeRequest(Request) -> EventLoopFuture<Self>","type":"method"},{"path":"\/documentation\/healthchecks\/healthcheckitem\/decoderequest(_:)-9ofgr","title":"static func decodeRequest(Request) async throws -> Self","type":"method"}],"path":"\/documentation\/healthchecks\/healthcheckitem\/content-implementations","title":"Content Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/healthchecks\/healthcheckitem\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/healthchecks\/healthcheckitem\/==(_:_:)","title":"static func == (HealthCheckItem, HealthCheckItem) -> Bool","type":"op"}],"path":"\/documentation\/healthchecks\/healthcheckitem\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/healthchecks\/healthcheckitem\/encoderesponse(status:headers:for:)","title":"func encodeResponse(status: HTTPStatus, headers: HTTPHeaders, for: Request) -> EventLoopFuture<Response>","type":"method"}],"path":"\/documentation\/healthchecks\/healthcheckitem\/responseencodable-implementations","title":"ResponseEncodable Implementations","type":"symbol"}],"path":"\/documentation\/healthchecks\/healthcheckitem","title":"HealthCheckItem","type":"struct"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/healthchecks\/healthchecks\/gethealth(from:)","title":"func getHealth(from: Application) -> HealthCheck","type":"method"},{"path":"\/documentation\/healthchecks\/healthchecks\/getpublicversion(from:)","title":"func getPublicVersion(from: String?) -> String?","type":"method"}],"path":"\/documentation\/healthchecks\/healthchecks","title":"HealthChecks","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/healthchecks\/mongohealthchecks\/app","title":"let app: Application","type":"property"},{"path":"\/documentation\/healthchecks\/mongohealthchecks\/url","title":"let url: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/healthchecks\/mongohealthchecks\/check(for:)","title":"func check(for: [MeasurementType]) async -> [String : HealthCheckItem]","type":"method"},{"path":"\/documentation\/healthchecks\/mongohealthchecks\/connection()","title":"func connection() async -> HealthCheckItem","type":"method"},{"path":"\/documentation\/healthchecks\/mongohealthchecks\/getconnection()","title":"func getConnection() async -> String","type":"method"},{"path":"\/documentation\/healthchecks\/mongohealthchecks\/responsetime()","title":"func responseTime() async -> HealthCheckItem","type":"method"}],"path":"\/documentation\/healthchecks\/mongohealthchecks","title":"MongoHealthChecks","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/healthchecks\/mongorequest\/app","title":"let app: Application","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/healthchecks\/mongorequest\/getconnection(by:)","title":"func getConnection(by: String) async throws -> String","type":"method"}],"path":"\/documentation\/healthchecks\/mongorequest","title":"MongoRequest","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/healthchecks\/postgreshealthchecks\/app","title":"let app: Application","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/healthchecks\/postgreshealthchecks\/check(for:)","title":"func check(for: [MeasurementType]) async -> [String : HealthCheckItem]","type":"method"},{"path":"\/documentation\/healthchecks\/postgreshealthchecks\/connection()","title":"func connection() async -> HealthCheckItem","type":"method"},{"path":"\/documentation\/healthchecks\/postgreshealthchecks\/getversion()","title":"func getVersion() async -> String","type":"method"},{"path":"\/documentation\/healthchecks\/postgreshealthchecks\/responsetime()","title":"func responseTime() async -> HealthCheckItem","type":"method"}],"path":"\/documentation\/healthchecks\/postgreshealthchecks","title":"PostgresHealthChecks","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/healthchecks\/psqlrequest\/app","title":"let app: Application","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/healthchecks\/psqlrequest\/getversiondescription()","title":"func getVersionDescription() async throws -> String","type":"method"}],"path":"\/documentation\/healthchecks\/psqlrequest","title":"PsqlRequest","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/healthchecks\/redishealthchecks\/app","title":"let app: Application","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/healthchecks\/redishealthchecks\/check(for:)","title":"func check(for: [MeasurementType]) async -> [String : HealthCheckItem]","type":"method"},{"path":"\/documentation\/healthchecks\/redishealthchecks\/connection()","title":"func connection() async -> HealthCheckItem","type":"method"},{"path":"\/documentation\/healthchecks\/redishealthchecks\/ping()","title":"func ping() async -> String","type":"method"},{"path":"\/documentation\/healthchecks\/redishealthchecks\/responsetime()","title":"func responseTime() async -> HealthCheckItem","type":"method"}],"path":"\/documentation\/healthchecks\/redishealthchecks","title":"RedisHealthChecks","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/healthchecks\/redisrequest\/app","title":"let app: Application","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/healthchecks\/redisrequest\/getpong()","title":"func getPong() async throws -> String","type":"method"}],"path":"\/documentation\/healthchecks\/redisrequest","title":"RedisRequest","type":"struct"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/healthchecks\/componentname\/consul","title":"case consul","type":"case"},{"path":"\/documentation\/healthchecks\/componentname\/cpu","title":"case cpu","type":"case"},{"path":"\/documentation\/healthchecks\/componentname\/grpc","title":"case grpc","type":"case"},{"path":"\/documentation\/healthchecks\/componentname\/kafka","title":"case kafka","type":"case"},{"path":"\/documentation\/healthchecks\/componentname\/memory","title":"case memory","type":"case"},{"path":"\/documentation\/healthchecks\/componentname\/mongo","title":"case mongo","type":"case"},{"path":"\/documentation\/healthchecks\/componentname\/postgresql","title":"case postgresql","type":"case"},{"path":"\/documentation\/healthchecks\/componentname\/redis","title":"case redis","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/healthchecks\/componentname\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/healthchecks\/componentname\/afterdecode()","title":"func afterDecode() throws","type":"method"},{"path":"\/documentation\/healthchecks\/componentname\/beforeencode()","title":"func beforeEncode() throws","type":"method"},{"path":"\/documentation\/healthchecks\/componentname\/encoderesponse(for:)","title":"func encodeResponse(for: Request) -> EventLoopFuture<Response>","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/healthchecks\/componentname\/defaultcontenttype","title":"static var defaultContentType: HTTPMediaType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/healthchecks\/componentname\/decoderequest(_:)-5j6kp","title":"static func decodeRequest(Request) -> EventLoopFuture<Self>","type":"method"},{"path":"\/documentation\/healthchecks\/componentname\/decoderequest(_:)-7y54r","title":"static func decodeRequest(Request) async throws -> Self","type":"method"}],"path":"\/documentation\/healthchecks\/componentname\/content-implementations","title":"Content Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/healthchecks\/componentname\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/healthchecks\/componentname\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/healthchecks\/componentname\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/healthchecks\/componentname\/init(postgresdata:)","title":"init?(postgresData: PostgresData)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/healthchecks\/componentname\/hashvalue","title":"var hashValue: Int","type":"property"},{"path":"\/documentation\/healthchecks\/componentname\/postgresdata","title":"var postgresData: PostgresData?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/healthchecks\/componentname\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/healthchecks\/componentname\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/healthchecks\/componentname\/postgresdatatype","title":"static var postgresDataType: PostgresDataType","type":"property"}],"path":"\/documentation\/healthchecks\/componentname\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/healthchecks\/componentname\/encoderesponse(status:headers:for:)","title":"func encodeResponse(status: HTTPStatus, headers: HTTPHeaders, for: Request) -> EventLoopFuture<Response>","type":"method"}],"path":"\/documentation\/healthchecks\/componentname\/responseencodable-implementations","title":"ResponseEncodable Implementations","type":"symbol"}],"path":"\/documentation\/healthchecks\/componentname","title":"ComponentName","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/healthchecks\/componenttype\/component","title":"case component","type":"case"},{"path":"\/documentation\/healthchecks\/componenttype\/datastore","title":"case datastore","type":"case"},{"path":"\/documentation\/healthchecks\/componenttype\/system","title":"case system","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/healthchecks\/componenttype\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/healthchecks\/componenttype\/afterdecode()","title":"func afterDecode() throws","type":"method"},{"path":"\/documentation\/healthchecks\/componenttype\/beforeencode()","title":"func beforeEncode() throws","type":"method"},{"path":"\/documentation\/healthchecks\/componenttype\/encoderesponse(for:)","title":"func encodeResponse(for: Request) -> EventLoopFuture<Response>","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/healthchecks\/componenttype\/defaultcontenttype","title":"static var defaultContentType: HTTPMediaType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/healthchecks\/componenttype\/decoderequest(_:)-13mus","title":"static func decodeRequest(Request) async throws -> Self","type":"method"},{"path":"\/documentation\/healthchecks\/componenttype\/decoderequest(_:)-7iwb1","title":"static func decodeRequest(Request) -> EventLoopFuture<Self>","type":"method"}],"path":"\/documentation\/healthchecks\/componenttype\/content-implementations","title":"Content Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/healthchecks\/componenttype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/healthchecks\/componenttype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/healthchecks\/componenttype\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/healthchecks\/componenttype\/init(postgresdata:)","title":"init?(postgresData: PostgresData)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/healthchecks\/componenttype\/hashvalue","title":"var hashValue: Int","type":"property"},{"path":"\/documentation\/healthchecks\/componenttype\/postgresdata","title":"var postgresData: PostgresData?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/healthchecks\/componenttype\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/healthchecks\/componenttype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/healthchecks\/componenttype\/postgresdatatype","title":"static var postgresDataType: PostgresDataType","type":"property"}],"path":"\/documentation\/healthchecks\/componenttype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/healthchecks\/componenttype\/encoderesponse(status:headers:for:)","title":"func encodeResponse(status: HTTPStatus, headers: HTTPHeaders, for: Request) -> EventLoopFuture<Response>","type":"method"}],"path":"\/documentation\/healthchecks\/componenttype\/responseencodable-implementations","title":"ResponseEncodable Implementations","type":"symbol"}],"path":"\/documentation\/healthchecks\/componenttype","title":"ComponentType","type":"enum"},{"path":"\/documentation\/healthchecks\/constants","title":"Constants","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/healthchecks\/healthcheckstatus\/fail","title":"case fail","type":"case"},{"path":"\/documentation\/healthchecks\/healthcheckstatus\/pass","title":"case pass","type":"case"},{"path":"\/documentation\/healthchecks\/healthcheckstatus\/warm","title":"case warm","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/healthchecks\/healthcheckstatus\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/healthchecks\/healthcheckstatus\/afterdecode()","title":"func afterDecode() throws","type":"method"},{"path":"\/documentation\/healthchecks\/healthcheckstatus\/beforeencode()","title":"func beforeEncode() throws","type":"method"},{"path":"\/documentation\/healthchecks\/healthcheckstatus\/encoderesponse(for:)","title":"func encodeResponse(for: Request) -> EventLoopFuture<Response>","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/healthchecks\/healthcheckstatus\/defaultcontenttype","title":"static var defaultContentType: HTTPMediaType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/healthchecks\/healthcheckstatus\/decoderequest(_:)-46i19","title":"static func decodeRequest(Request) async throws -> Self","type":"method"},{"path":"\/documentation\/healthchecks\/healthcheckstatus\/decoderequest(_:)-8o7k2","title":"static func decodeRequest(Request) -> EventLoopFuture<Self>","type":"method"}],"path":"\/documentation\/healthchecks\/healthcheckstatus\/content-implementations","title":"Content Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/healthchecks\/healthcheckstatus\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/healthchecks\/healthcheckstatus\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/healthchecks\/healthcheckstatus\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/healthchecks\/healthcheckstatus\/init(postgresdata:)","title":"init?(postgresData: PostgresData)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/healthchecks\/healthcheckstatus\/hashvalue","title":"var hashValue: Int","type":"property"},{"path":"\/documentation\/healthchecks\/healthcheckstatus\/postgresdata","title":"var postgresData: PostgresData?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/healthchecks\/healthcheckstatus\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/healthchecks\/healthcheckstatus\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/healthchecks\/healthcheckstatus\/postgresdatatype","title":"static var postgresDataType: PostgresDataType","type":"property"}],"path":"\/documentation\/healthchecks\/healthcheckstatus\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/healthchecks\/healthcheckstatus\/encoderesponse(status:headers:for:)","title":"func encodeResponse(status: HTTPStatus, headers: HTTPHeaders, for: Request) -> EventLoopFuture<Response>","type":"method"}],"path":"\/documentation\/healthchecks\/healthcheckstatus\/responseencodable-implementations","title":"ResponseEncodable Implementations","type":"symbol"}],"path":"\/documentation\/healthchecks\/healthcheckstatus","title":"HealthCheckStatus","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/healthchecks\/measurementtype\/connections","title":"case connections","type":"case"},{"path":"\/documentation\/healthchecks\/measurementtype\/responsetime","title":"case responseTime","type":"case"},{"path":"\/documentation\/healthchecks\/measurementtype\/uptime","title":"case uptime","type":"case"},{"path":"\/documentation\/healthchecks\/measurementtype\/utilization","title":"case utilization","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/healthchecks\/measurementtype\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/healthchecks\/measurementtype\/afterdecode()","title":"func afterDecode() throws","type":"method"},{"path":"\/documentation\/healthchecks\/measurementtype\/beforeencode()","title":"func beforeEncode() throws","type":"method"},{"path":"\/documentation\/healthchecks\/measurementtype\/encoderesponse(for:)","title":"func encodeResponse(for: Request) -> EventLoopFuture<Response>","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/healthchecks\/measurementtype\/defaultcontenttype","title":"static var defaultContentType: HTTPMediaType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/healthchecks\/measurementtype\/decoderequest(_:)-7lg25","title":"static func decodeRequest(Request) -> EventLoopFuture<Self>","type":"method"},{"path":"\/documentation\/healthchecks\/measurementtype\/decoderequest(_:)-8t641","title":"static func decodeRequest(Request) async throws -> Self","type":"method"}],"path":"\/documentation\/healthchecks\/measurementtype\/content-implementations","title":"Content Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/healthchecks\/measurementtype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/healthchecks\/measurementtype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/healthchecks\/measurementtype\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/healthchecks\/measurementtype\/init(postgresdata:)","title":"init?(postgresData: PostgresData)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/healthchecks\/measurementtype\/hashvalue","title":"var hashValue: Int","type":"property"},{"path":"\/documentation\/healthchecks\/measurementtype\/postgresdata","title":"var postgresData: PostgresData?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/healthchecks\/measurementtype\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/healthchecks\/measurementtype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/healthchecks\/measurementtype\/postgresdatatype","title":"static var postgresDataType: PostgresDataType","type":"property"}],"path":"\/documentation\/healthchecks\/measurementtype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/healthchecks\/measurementtype\/encoderesponse(status:headers:for:)","title":"func encodeResponse(status: HTTPStatus, headers: HTTPHeaders, for: Request) -> EventLoopFuture<Response>","type":"method"}],"path":"\/documentation\/healthchecks\/measurementtype\/responseencodable-implementations","title":"ResponseEncodable Implementations","type":"symbol"}],"path":"\/documentation\/healthchecks\/measurementtype","title":"MeasurementType","type":"enum"},{"title":"Extended Modules","type":"groupMarker"},{"children":[{"title":"Extended Classes","type":"groupMarker"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/healthchecks\/vapor\/application\/applicationhealthcheckskey\/value","title":"Application.ApplicationHealthChecksKey.Value","type":"typealias"}],"path":"\/documentation\/healthchecks\/vapor\/application\/applicationhealthcheckskey","title":"Application.ApplicationHealthChecksKey","type":"struct"},{"children":[{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/healthchecks\/vapor\/application\/consulhealthcheckskey\/value","title":"Application.ConsulHealthChecksKey.Value","type":"typealias"}],"path":"\/documentation\/healthchecks\/vapor\/application\/consulhealthcheckskey","title":"Application.ConsulHealthChecksKey","type":"struct"},{"children":[{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/healthchecks\/vapor\/application\/mongoclusterkey\/value","title":"Application.MongoClusterKey.Value","type":"typealias"}],"path":"\/documentation\/healthchecks\/vapor\/application\/mongoclusterkey","title":"Application.MongoClusterKey","type":"struct"},{"children":[{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/healthchecks\/vapor\/application\/mongohealthcheckskey\/value","title":"Application.MongoHealthChecksKey.Value","type":"typealias"}],"path":"\/documentation\/healthchecks\/vapor\/application\/mongohealthcheckskey","title":"Application.MongoHealthChecksKey","type":"struct"},{"children":[{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/healthchecks\/vapor\/application\/mongorequestsendablekey\/value","title":"Application.MongoRequestSendableKey.Value","type":"typealias"}],"path":"\/documentation\/healthchecks\/vapor\/application\/mongorequestsendablekey","title":"Application.MongoRequestSendableKey","type":"struct"},{"children":[{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/healthchecks\/vapor\/application\/postgreshealthcheckskey\/value","title":"Application.PostgresHealthChecksKey.Value","type":"typealias"}],"path":"\/documentation\/healthchecks\/vapor\/application\/postgreshealthcheckskey","title":"Application.PostgresHealthChecksKey","type":"struct"},{"children":[{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/healthchecks\/vapor\/application\/psqlrequestkey\/value","title":"Application.PsqlRequestKey.Value","type":"typealias"}],"path":"\/documentation\/healthchecks\/vapor\/application\/psqlrequestkey","title":"Application.PsqlRequestKey","type":"struct"},{"children":[{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/healthchecks\/vapor\/application\/redishealthcheckskey\/value","title":"Application.RedisHealthChecksKey.Value","type":"typealias"}],"path":"\/documentation\/healthchecks\/vapor\/application\/redishealthcheckskey","title":"Application.RedisHealthChecksKey","type":"struct"},{"children":[{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/healthchecks\/vapor\/application\/redisrequestkey\/value","title":"Application.RedisRequestKey.Value","type":"typealias"}],"path":"\/documentation\/healthchecks\/vapor\/application\/redisrequestkey","title":"Application.RedisRequestKey","type":"struct"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/healthchecks\/vapor\/application\/applicationhealthchecks","title":"var applicationHealthChecks: (any ApplicationHealthChecksProtocol)?","type":"property"},{"path":"\/documentation\/healthchecks\/vapor\/application\/consulconfig","title":"var consulConfig: ConsulConfig?","type":"property"},{"path":"\/documentation\/healthchecks\/vapor\/application\/consulhealthchecks","title":"var consulHealthChecks: (any ConsulHealthChecksProtocol)?","type":"property"},{"path":"\/documentation\/healthchecks\/vapor\/application\/datetimeisoformat","title":"var dateTimeISOFormat: DateFormatter","type":"property"},{"path":"\/documentation\/healthchecks\/vapor\/application\/launchtime","title":"var launchTime: Double","type":"property"},{"path":"\/documentation\/healthchecks\/vapor\/application\/mongocluster","title":"var mongoCluster: MongoCluster?","type":"property"},{"path":"\/documentation\/healthchecks\/vapor\/application\/mongohealthchecks","title":"var mongoHealthChecks: (any MongoHealthChecksProtocol)?","type":"property"},{"path":"\/documentation\/healthchecks\/vapor\/application\/mongoid","title":"var mongoId: String?","type":"property"},{"path":"\/documentation\/healthchecks\/vapor\/application\/mongorequest","title":"var mongoRequest: (any MongoRequestSendable)?","type":"property"},{"path":"\/documentation\/healthchecks\/vapor\/application\/psqlhealthchecks","title":"var psqlHealthChecks: (any PostgresHealthChecksProtocol)?","type":"property"},{"path":"\/documentation\/healthchecks\/vapor\/application\/psqlid","title":"var psqlId: String?","type":"property"},{"path":"\/documentation\/healthchecks\/vapor\/application\/psqlrequest","title":"var psqlRequest: (any PsqlRequestSendable)?","type":"property"},{"path":"\/documentation\/healthchecks\/vapor\/application\/redishealthchecks","title":"var redisHealthChecks: (any RedisHealthChecksProtocol)?","type":"property"},{"path":"\/documentation\/healthchecks\/vapor\/application\/redisid","title":"var redisId: String?","type":"property"},{"path":"\/documentation\/healthchecks\/vapor\/application\/redisrequest","title":"var redisRequest: (any RedisRequestSendable)?","type":"property"},{"path":"\/documentation\/healthchecks\/vapor\/application\/releaseid","title":"var releaseId: String?","type":"property"},{"path":"\/documentation\/healthchecks\/vapor\/application\/serviceid","title":"var serviceId: UUID?","type":"property"}],"path":"\/documentation\/healthchecks\/vapor\/application","title":"Application","type":"extension"}],"path":"\/documentation\/healthchecks\/vapor","title":"Vapor","type":"extension"}],"path":"\/documentation\/healthchecks","title":"HealthChecks","type":"module"}]},"schemaVersion":{"major":0,"minor":1,"patch":1}}